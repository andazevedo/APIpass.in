// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Event {
  id               String  @id @default(uuid()) // DF9BE0DO-BB06-403E-AEE7-C14C8EFB3F27  isso é um exemplo de uuid (unique Universal id)
  title            String
  details          String?
  slug             String  @unique //slug é como o titulo mas sem espaço, sem acento e sem maiusculo e tbm é unico do evento para passar no site. ao invés de ir assim: https:/localhost:3333/events/ DF9BE0DO-BB06-403E-AEE7-C14C8EFB3F27 vai assim: ttps:/localhost:3333/events/nlw-unite
  maximumAttendees   Int?    @map("maximum_attendees") // 1 @ = renomear campo, 2@@ = renomear tabela



  attendees         Attendee[] 
  


  @@map("events") //declaramoas como Event c letra maiuscula e no singular mas a boa pratica é deixar minusculo e plural, na hora de criar a tabela vai criar como events por causa desse map
}

model Attendee {
  id        Int    @id @default(autoincrement())
  name      String
  email     String
  createdAt DateTime   @default(now()) @map("created_at")
  eventId   String     @map("event_id")

  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
  checkIn CheckIn?

  @@unique([eventId, email])
  @@map("attendees")
}

model CheckIn {
  id Int             @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")

  attendee Attendee  @relation(fields: [attendeeId], references: [id], onDelete: Cascade)
  attendeeId Int     @unique   @map("attendee_id")

  @@map("check_ins")
}


